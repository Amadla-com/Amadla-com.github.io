Secrets Management
=============================

There are multiple ways to manage secrets in Amadla CLI. You can use environment variables, Vault or a combination of both.

Environment variables
---------------------

Using the prefix ``AMADLA_SECRET_`` when naming your environment variable Amadla CLI will automatically pick it up and use it as a secret.

If you use a environment variable and Vault at the same time, the environment variable will take precedence but for the other secrets they will come from Vault.

Using Vault
-----------

Make sure you have a Vault server running and that you have the following environment variables set:

* ``VAULT_ADDR`` - The address of the Vault server
* ``VAULT_TOKEN`` - The token to authenticate with Vault
* ``VAULT_LOG_LEVEL`` - (optional) The log level for Vault (if not set it will use the log level of Amadla CLI)
* ``VAULT_NAMESPACE`` - (optional) The namespace to use in Vault
* ``VAULT_SKIP_VERIFY`` - (optional) Set to ``true`` if you want to skip TLS verification
* ``VAULT_CLIENT_TIMEOUT`` - (optional) The timeout for Vault requests
* ``VAULT_MAX_RETRIES`` - (optional) The maximum number of retries for Vault requests

For a full list of environment variables see the `Vault documentation <https://developer.hashicorp.com/vault/docs/commands#environment-variables>`__.

.. tip::

   To help you troubleshoot the Linux environment variables you can use these commands (should be the same on Mac OS X and other UNIX based systems):

    * ``export | grep VAULT`` - To see all the environment variables that are set
    * ``echo $VAULT_ADDR`` - To see the value of a specific environment variable
    * ``unset VAULT_ADDR`` - To unset a specific environment variable
    * ``unset $(compgen -v | grep VAULT)`` - To unset all the environment variables that start with ``VAULT``
    * ``printenv`` - To see all the environment variables that are set (you can always pipe this to ``grep`` to filter the output)

   For the Windows environment using PowerShell you can use these commands:

    * ``Get-ChildItem Env:VAULT*`` - To see all the environment variables that are set
    * ``$Env:VAULT_ADDR`` - To see the value of a specific environment variable
    * ``Remove-Item Env:VAULT_ADDR`` - To unset a specific environment variable
    * ``Get-ChildItem Env:VAULT* | Remove-Item`` - To unset all the environment variables that start with ``VAULT``
    * ``Get-ChildItem Env:`` - To see all the environment variables that are set (you can always pipe this to ``Select-String`` to filter the output)

   Using Windows CMD:

    * ``set | findstr VAULT`` - To see all the environment variables that are set
    * ``echo %VAULT_ADDR%`` - To see the value of a specific environment variable
    * ``set VAULT_ADDR=`` - To unset a specific environment variable
    * To unset all the environment variables that start with "VAULT" is a bit more complex in CMD and may require a script, it's not a single command.
    * ``set`` - To see all the environment variables that are set

.. note::

    If you use Vault you need to make sure that the Vault server is reachable from the Amadla CLI container. If you use Docker Compose you can use the ``network_mode: host`` option to make sure that the container can reach the Vault server.
