Setup
==============

Instructions for local setup
--------------------

.. note::

   If you are using a container you can skip this section.

System Packages
~~~~~~~~~~~~~~~

- python (11 or higher)
- pip (you might need to upgrade it after it is installed with ``pip install --upgrade pip`` or ``pip3 install --upgrade pip``)
- make - optional (needed for the Makefile for generating documentations that is in the ``docs/`` directory)
- `git <https://git-scm.com/>`__ (is needed for the pulling of modules)
- `Terraform <https://www.terraform.io/downloads.html>`__
- `Vault <https://www.vaultproject.io/downloads.html>`__
- `Packer <https://www.packer.io/downloads.html>`__
- `Ansible <https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html>`__

.. tip::

    There are multiple ways to install the needed applications. You can download them directly and install them or even compile them or use a package manager on your system.

Mac OS X
^^^^^^^^

Homebrew
""""""""

.. code-block:: bash

   brew install python
   brew install git
   brew tap hashicorp/tap
   brew install hashicorp/tap/terraform hashicorp/tap/packer hashicorp/tap/vault
   brew install ansible

Install ``pip``
"""""""""""""""

If your Python default version is 3 or higher:

.. code-block:: bash

   curl https://bootstrap.pypa.io/get-pip.py | python

Or if your Python default version is 2 you might need to use this command:

.. code-block:: bash

   curl https://bootstrap.pypa.io/get-pip.py | python3

Windows
^^^^^^^

The only it seems that you can install what is needed on Windows is by doing it manually by following the links above and installing them.

.. note::

    `Chocolatey <https://chocolatey.org/>`__ might have some of the packages but it is not guaranteed that they will work.

Linux
^^^^^

Debian/Ubuntu
"""""""""""""

.. code-block:: bash

   sudo apt install -y unzip make ca-certificates git
   wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
   echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
   sudo apt update && sudo apt install -y terraform vault packer
   sudo apt-add-repository ppa:ansible/ansible
   sudo apt update
   sudo apt install -y ansible

CentOS/RHEL
"""""""""""

.. code-block:: bash

   sudo yum install -y yum-utils git ansible make zip
   sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
   sudo yum -y install terraform vault packer

Fedora
""""""

.. code-block:: bash

   sudo dnf install -y dnf-plugins-core git ansible make zip
   sudo dnf config-manager --add-repo https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
   sudo dnf -y install terraform vault packer

Python Packages
~~~~~~~~~~~~~~~

- `poetry <https://python-poetry.org/>`__ (``pip install poetry`` or ``pip3 install poetry``)

Instructions for container setup
--------------------

The container comes with the same packages as the local system setup except Vault you will need to use the Vault container or point via the configuration to wherever your Vault setup is.

.. note::

   If you already have a container engine then you skip the System Packages setup.

System Packages
~~~~~~~~~~~~~~~

- `Podman <https://podman.io/getting-started/installation>`__ (``sudo dnf install podman`` or ``sudo apt install podman``)
- Or `Docker <https://docs.docker.com/get-docker/>`__ (``sudo dnf install docker-ce`` or ``sudo apt install docker-ce``)
- Or `Kubernetes <https://kubernetes.io/docs/tasks/tools/install-kubectl/>`__ (``sudo dnf install kubectl`` or ``sudo apt install kubectl``)

Configurations
~~~~~~~~~~~~~~~

For Amadla you can use environment variables or a ``.env`` file. The
``.env`` file is loaded automatically if it exists in the root of the project.

.. code:: bash

   touch .env

With Container
------------------

1. You need to have a Vault instance running.
2. Add your secrets to your Vault instance (or configure your Vault to
   load the secrets from a `storage
   backend <https://www.vaultproject.io/docs/configuration/storage>`__).

   -  `Adding secrets to Vault <./adding-secrets-to-vault.md>`__

Add Secrets
------------

Vault
~~~~~

Start Vault
^^^^^^^^^^^

Depending on how you installed Vault you can start it with:

* `Vault <https://www.vaultproject.io/docs/commands/server>`__ - ``vault server -dev`` if it is installed locally.
* `Podman <https://podman.io/getting-started/installation>`__ - ``podman run -d --name vault -p 8200:8200 vault``.
* `Docker <https://docs.docker.com/engine/reference/commandline/run/>`__ - ``docker run -d --name vault -p 8200:8200 vault``.
* `Kubernetes <https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#run>`__ - ``kubectl run vault --image vault --port 8200``.
* `podman-compose <https://github.com/containers/podman-compose>`__ - ``podman-compose up -d`` (or ``docker-compose`` if you are using Docker).

Add Secrets to Vault
~~~~~~~~~~~~~~~~~~~~

To add, remove, and list secrets you can follow the `Secrets documentation <secrets-management>`__.

Install Amadla CLI Dependencies
-------------------------------

.. code:: bash

   poetry install

Or you can run it with ``python<python version> -m``:

.. code:: bash

   python3 -m poetry install

.. note::

   For the none development environment you can run ``poetry install --no-dev`` or ``python3 -m poetry install --no-dev``.
   This will not install the development dependencies that are listed in ``[tool.poetry.dev-dependencies]`` in ``pyproject.toml`` file.

Start Amadla
------------

You can try to run the CLI with:

.. code:: bash

   poetry run amadla

Or you can run it with ``python<python version> -m``:

.. code:: bash

   python3 -m poetry run amadlacli

The other commands: - ``clean`` - Remove ``.terraform`` folder, state
and plan files - ``down`` - Plan and apply a tf destroy
